
kernel: conntrack: generic helper won't handle protocol 47. Please consider loading the specific helper module.

kernel: nr_pdflush_threads exported in /proc is scheduled for removal

kernel: perf: interrupt took too long \(\d+ > \d+\), lowering kernel.perf_event_max_sample_rate to \d+

kernel: gran_size: \d+K #011chunk_size: \d+G #011num_reg: \d+  #011lose cover RAM: \d+G
kernel: #011RCU restricting CPUs from NR_CPUS=\d+ to nr_cpu_ids=\d+\.

kernel: IPv6: ADDRCONF\(NETDEV_UP\): \S+: link is not ready
kernel: IPv6: ADDRCONF\(NETDEV_CHANGE\): \S+: link becomes ready

kernel: .* NIC Link is Up .* Mbps Full Duplex, Flow Control: .*

kernel: ixgbe \S+ registered PHC device on \S+
kernel: ixgbe \S+ \S+ NIC Link is Up 1 Gbps, Flow Control: None
kernel: ixgbe \S+ removed PHC on \S+

kernel: bridge: filtering via arp/ip/ip6tables is no longer available by default\. Update your scripts to load br_netfilter if you need this\.

kernel: ip_tables: \(C\) \d+-\d+ Netfilter Core Team
kernel: ip6_tables: \(C\) \d+-\d+ Netfilter Core Team
kernel: Ebtables v\d+\.\d+ registered

kernel: nf_conntrack version \d+\.\d+\.\d+ \(\d+ buckets, \d+ max\)
kernel: device \S+ left promiscuous mode

kernel: tun: Universal TUN/TAP device driver, \d+\.\d+
kernel: tun: \(C\) \d+-\d+ Max Krasnyansky \<maxk\@qualcomm\.com\>

kernel: \S+: port \d+\(\S+\) entered blocking state
kernel: \S+: port \d+\(\S+\) entered disabled state
kernel: \S+: port \d+\(\S+\) entered forwarding state
kernel: device \S+ entered promiscuous mode

kernel: alg: No test for crc32 \(crc32-pclmul\)
kernel: Btrfs loaded, crc32c=crc32c-intel
kernel: fuse init \(API version \d+\.\d+\)

kernel: xor: automatically using best checksumming function:
kernel: \s+avx\s+ : \d+\.\d+ MB/sec
kernel: raid6: sse2x1   gen\(\)\s+\d+ MB/s
kernel: raid6: sse2x2   gen\(\)\s+\d+ MB/s
kernel: raid6: sse2x4   gen\(\)\s+\d+ MB/s
kernel: raid6: using algorithm sse2x4 gen\(\) \(\d+ MB/s\)
kernel: raid6: using ssse3x2 recovery algorithm
kernel: raid6: avx2x1   gen\(\)\s+\d+ MB/s
kernel: raid6: avx2x2   gen\(\)\s+\d+ MB/s
kernel: raid6: avx2x4   gen\(\)\s+\d+ MB/s
kernel: raid6: using algorithm avx2x4 gen\(\) \(\d+ MB/s\)
kernel: raid6: using avx2x2 recovery algorithm

kernel: cryptd: max_cpu_qlen set to 100
kernel: AVX2 version of gcm_enc/dec engaged.
kernel: AES CTR mode by8 optimization enabled
kernel: alg: No test for __gcm-aes-aesni \(__driver-gcm-aes-aesni\)
kernel: alg: No test for __generic-gcm-aes-aesni \(__driver-generic-gcm-aes-aesni\)

kernel: kvm-clock: using sched offset of \S+ cycles
kernel: tsc: Detected \S+ MHz processor
kernel: Calibrating delay loop \(skipped\) preset value\.\. \S+ BogoMIPS \(\S+\)
kernel: node \d+ initialised, \d+ pages in \d+ms
kernel: RTC time:  \S+, date: \S+
kernel:  Magic number: \d+:\d+:\d+
kernel: rtc_cmos \S+ setting system clock to .*
kernel: smpboot: Total of \d+ processors activated \(\S+ BogoMIPS\)
kernel: tsc: Refined TSC clocksource calibration: \S+ MHz

kernel: type=\d+ audit\(\S+\): initialized
kernel: type=\d+ audit\(\S+\): audit_pid=\d+ old=\d+ auid=\d+ ses=\d+ res=\d+

kernel: random: crng init done

kernel: \[TTM\] Zone  kernel: Available graphics memory: .*
kernel: \[TTM\] Initializing pool allocator
kernel: \[TTM\] Initializing DMA pool allocator
kernel: \[drm\] fb mappable at \S+
kernel: \[drm\] vram aper at \S+
kernel: \[drm\] size \S+
kernel: \[drm\] fb depth is \d+
kernel: \[drm\]    pitch is \d+
kernel: fbcon: cirrusdrmfb \(fb0\) is primary device
kernel: Console: switching to colour frame buffer device \d+x\d+
kernel: cirrus \S+: fb0: cirrusdrmfb frame buffer device
kernel: \[drm\] Initialized cirrus \S+ \S+ for \S+ on minor \d+

kernel: zd\d+: p\d+
kernel: zd\d+: p\d+ p\d+

kernel: Calibrating delay loop \S+, value calculated using timer frequency.. \S+ BogoMIPS \S+
kernel: RTC time: \d\d:\d\d:\d\d, date: \d\d/\d\d/\d\d

kernel: microcode: CPU\d+ updated to revision \S+, date = \d\d\d\d-\d\d-\d\d
kernel: microcode: CPU\d+ sig=\S+, pf=\S+, revision=\S+

